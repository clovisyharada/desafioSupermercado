
spring.main.web-application-type=NONE
# datasource PostgreSQL
spring.datasource.url = jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/desafio
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}

# jpa
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql: true
#logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.orm.jdbc.bind=trace

spring.mvc.format.date=yyyy-MM-dd
spring.mvc.format.date-time=iso
spring.mvc.format.time=HH:mm:ss
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# kafka
spring.kafka.bootstrap-servers=${KAFKA_HOST}:${KAFKA_PORT}
# Producer properties
spring.kafka.producer.bootstrap-servers=${KAFKA_HOST}:${KAFKA_PORT}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer properties
spring.kafka.consumer.bootstrap-servers=${KAFKA_HOST}:${KAFKA_PORT}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=lancamentoprocessador

spring.kafka.consumer.properties.spring.json.trusted.packages = *
topic.name.lancamento=lancamento

auto.create.topics.enable=true
